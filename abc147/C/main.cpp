#include <bits/stdc++.h>
#include <vector>
#include <tgmath.h>
using namespace std;



// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)




int N;
vector<vector<int>> target;
vector<vector<int>> ptype;
vector<int> people;
int ans;

// nがv(0or1)であると仮定
int check(){
    int res =0;
    for(int i=0;i<N;i++){
        if(people[i] == 0){
            continue;
        }
        for(int j=0;j<target[i].size();j++){
            if(people[target[i][j]] != ptype[i][j]){
                return 0;
            }
        }
        res++;
    }
    return res;
}

void dfs(int n,int v){
    // cout << "n="<< n << "v=" << v << endl;
    people[n] = v;
    if(n >=N-1){
        ans = max(ans,check());
        // cout << "ans =" << ans << endl;
        return;
    }
    dfs(n+1,0);
    dfs(n+1,1);
}

int main(){
    // Failed to predict input format
    cin >> N;
    target.resize(N);
    ptype.resize(N);
    people.resize(N,-1);

    for(int i=0;i<N;i++){
        int a;
        cin >> a;
        for(int j=0;j<a;j++){
            int b,c;
            cin >> b >> c;
            b--;
            target[i].emplace_back(b);
            ptype[i].emplace_back(c);
        }
    }
    dfs(0,0);
    dfs(0,1);
    cout << ans << endl;
    return 0;
}
