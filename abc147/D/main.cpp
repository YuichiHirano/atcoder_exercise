#include <bits/stdc++.h>
#include <fstream>
using namespace std;

const long long MOD = 1000000007LL;



void solve(long long N, std::vector<long long> A){
    vector<long long> zeros(60,0);
    vector<long long> ones(60,0);
 
    for(long long i=0;i<N;i++){
        for(long long j=0;j<60;j++){
            if((A[i] >> j & 1 )==1){
                ones[j]++;
            }else{
                zeros[j]++;
            }
        }
    }
    long long ans =0LL;
    for(long long i=0;i<60;i++){
        if(ones[i] ==0 || zeros[i] ==0){
            continue;
        }
        // cout << "ones=" << ones[i] <<"zeros=" << zeros[i]<<endl; 
        long long res = (ones[i] * zeros[i]);
        for(int j=0;j <i;j++){
            res *=2;
            res %= MOD;
        }
        // cout << "res=" << res << endl;
        ans += res;
        ans %= MOD;
        // cout  << ans << endl;
    }
    cout << ans << endl;
}

// Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
int main(){
    long long N;
    // ifstream in("random_11");
    // cin.rdbuf(in.rdbuf());
    cin >> N;
    std::vector<long long> A(N);
    for(int i = 0 ; i < N ; i++){
        cin >> A[i];
    }
    solve(N, std::move(A));
    return 0;
}
